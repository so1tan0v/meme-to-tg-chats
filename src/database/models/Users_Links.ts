import { Model, DataTypes, Optional, BelongsTo } from 'sequelize';import { sequelize } from '../db';import Users from './Users';export interface UsersLinksAttributes {    id: number;    user_id: number;    url: string;    code: string;    createdAt?: Date;}export interface UsersLinksCreationAttributes extends Optional<UsersLinksAttributes, 'id'> {}class Users_Links    extends Model<UsersLinksAttributes, UsersLinksCreationAttributes>    implements UsersLinksAttributes{    public id!: number;    public user_id!: number;    public url!: string;    public code!: string;    public createdAt!: Date;    static Users: BelongsTo<Users_Links, Users>;}Users_Links.init(    {        id: {            type: DataTypes.INTEGER,            primaryKey: true,            unique: true,            autoIncrement: true,            comment: 'Идентификатор записи',        },        user_id: {            type: DataTypes.NUMBER,            comment: 'Идентификатор пользователя',            references: {                model: Users,                key: 'id',            },        },        url: {            type: DataTypes.STRING,            comment: 'URL до контента',        },        code: {            type: DataTypes.STRING,            comment: 'Код ссылки',        },        createdAt: {            type: DataTypes.DATE,            comment: 'Дата создания записи',        },    },    {        sequelize,        tableName: 'Users_Links',        timestamps: true,        comment: 'Статистика пользователей',    },);// Users_Links.Users = Users_Links.belongsTo(Users)export default Users_Links;