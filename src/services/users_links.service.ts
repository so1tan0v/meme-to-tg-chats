import Users_Links, { UsersLinksCreationAttributes } from '../database/models/Users_Links';import { Op, Sequelize } from 'sequelize';export class UsersLinksService {    private data: Users_Links;    constructor(users_links: Users_Links) {        this.data = users_links;    }    async update(params: Users_Links) {        this.data = await this.data.update(params);    }    static async create(params: UsersLinksCreationAttributes) {        const users_links = await Users_Links.create(params);        return new UsersLinksService(users_links);    }    static async getByCode(code: string) {        return await Users_Links.findOne({            where: {                code,            },        });    }    static async removeByCode(code: string) {        return await Users_Links.destroy({            where: {                code,            },        });    }    static async removeExpired() {        const fifteenMinutesAgo = Sequelize.literal("DATETIME('now', '-15 minutes')");        await Users_Links.destroy({            where: {                createdAt: {                    [Op.lte]: fifteenMinutesAgo,                },            },        });    }}